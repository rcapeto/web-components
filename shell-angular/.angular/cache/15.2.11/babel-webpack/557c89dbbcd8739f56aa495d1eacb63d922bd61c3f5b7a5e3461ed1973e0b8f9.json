{"ast":null,"code":"export function loadScript(src) {\n  const type = 'module';\n  return new Promise((resolve, reject) => {\n    if (typeof document === 'undefined') {\n      reject('loadScript: document não está definido');\n      return;\n    }\n    const hasScript = document.querySelector(`script[src^=\"${src}\"]`);\n    if (hasScript) {\n      resolve(true);\n      return;\n    }\n    const script = document.createElement('script');\n    script.src = src;\n    script.type = type;\n    script.async = true;\n    script.defer = true;\n    script.onload = () => {\n      resolve(true);\n    };\n    script.onerror = () => {\n      reject(`loadScript: ocorreu um erro ao carregar o script: ${src}`);\n    };\n    console.log('script', script);\n    document.body.appendChild(script);\n  });\n}","map":{"version":3,"mappings":"AAAA,OAAM,SAAUA,UAAUA,CAACC,GAAW;EACpC,MAAMC,IAAI,GAAG,QAAQ;EAErB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;IACrC,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;MACnCD,MAAM,CAAC,wCAAwC,CAAC;MAChD;;IAGF,MAAME,SAAS,GAAGD,QAAQ,CAACE,aAAa,CAAC,gBAAgBP,GAAG,IAAI,CAAC;IAEjE,IAAIM,SAAS,EAAE;MACbH,OAAO,CAAC,IAAI,CAAC;MACb;;IAGF,MAAMK,MAAM,GAAGH,QAAQ,CAACI,aAAa,CAAC,QAAQ,CAAC;IAE/CD,MAAM,CAACR,GAAG,GAAGA,GAAG;IAChBQ,MAAM,CAACP,IAAI,GAAGA,IAAI;IAClBO,MAAM,CAACE,KAAK,GAAG,IAAI;IACnBF,MAAM,CAACG,KAAK,GAAG,IAAI;IAEnBH,MAAM,CAACI,MAAM,GAAG,MAAK;MACnBT,OAAO,CAAC,IAAI,CAAC;IACf,CAAC;IAEDK,MAAM,CAACK,OAAO,GAAG,MAAK;MACpBT,MAAM,CAAC,qDAAqDJ,GAAG,EAAE,CAAC;IACpE,CAAC;IAEDc,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEP,MAAM,CAAC;IAE7BH,QAAQ,CAACW,IAAI,CAACC,WAAW,CAACT,MAAM,CAAC;EACnC,CAAC,CAAC;AACJ","names":["loadScript","src","type","Promise","resolve","reject","document","hasScript","querySelector","script","createElement","async","defer","onload","onerror","console","log","body","appendChild"],"ignoreList":[],"sourceRoot":"","sources":["/Users/raphaelcapeto/Documents/arquitura-web-components/project-1/src/utils/load-script.ts"],"sourcesContent":["export function loadScript(src: string) {\n  const type = 'module';\n\n  return new Promise((resolve, reject) => {\n    if (typeof document === 'undefined') {\n      reject('loadScript: document não está definido');\n      return;\n    }\n\n    const hasScript = document.querySelector(`script[src^=\"${src}\"]`);\n\n    if (hasScript) {\n      resolve(true);\n      return;\n    }\n\n    const script = document.createElement('script');\n\n    script.src = src;\n    script.type = type;\n    script.async = true;\n    script.defer = true;\n\n    script.onload = () => {\n      resolve(true);\n    };\n\n    script.onerror = () => {\n      reject(`loadScript: ocorreu um erro ao carregar o script: ${src}`);\n    };\n\n    console.log('script', script);\n\n    document.body.appendChild(script);\n  });\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}