{"ast":null,"code":"import _asyncToGenerator from \"/Users/raphaelcapeto/Documents/arquitura-web-components/project-1/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nlet AppComponent = class AppComponent {\n  constructor() {\n    this.loading = false;\n  }\n  ngAfterViewInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        _this.loading = true;\n        yield _this.loadScript();\n        yield _this.loadMfeButton();\n      } finally {\n        _this.loading = false;\n      }\n    })();\n  }\n  loadScript() {\n    const src = 'http://localhost:5002/assets/mfe-button.js';\n    const type = 'module';\n    return new Promise((resolve, reject) => {\n      if (typeof document === 'undefined') {\n        reject('loadScript: document não está definido');\n      }\n      const hasScript = document.querySelector(`script[src^=\"${src}\"]`);\n      if (hasScript) {\n        resolve(true);\n      }\n      const script = document.createElement('script');\n      script.src = src;\n      script.type = type;\n      script.async = true;\n      script.onload = () => {\n        console.log('@@@ carregou o mfe');\n        resolve(true);\n      };\n      script.onerror = () => {\n        reject(`loadScript: ocorreu um erro ao carregar o script: ${src}`);\n      };\n      document.body.appendChild(script);\n    });\n  }\n  loadMfeButton() {\n    const tag = 'mfe-button';\n    return new Promise(resolve => {\n      customElements.whenDefined(tag).then(() => {\n        const webComponent = document.createComment(tag);\n        console.log(webComponent);\n        this.container.nativeElement.appendChild(webComponent);\n        resolve(webComponent);\n      });\n    });\n  }\n};\n__decorate([ViewChild('container', {\n  read: ElementRef\n})], AppComponent.prototype, \"container\", void 0);\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})], AppComponent);\nexport { AppComponent };","map":{"version":3,"mappings":";;AAAA,SAAwBA,SAAS,EAAEC,UAAU,EAAEC,SAAS,QAAQ,eAAe;AAOxE,IAAMC,YAAY,GAAlB,MAAMA,YAAY;EAAlBC,YAAA;IAIL,KAAAC,OAAO,GAAG,KAAK;EA8DjB;EA5DQC,eAAeA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACnB,IAAI;QACFD,KAAI,CAACF,OAAO,GAAG,IAAI;QAEnB,MAAME,KAAI,CAACE,UAAU,EAAE;QACvB,MAAMF,KAAI,CAACG,aAAa,EAAE;OAC3B,SAAS;QACRH,KAAI,CAACF,OAAO,GAAG,KAAK;;IACrB;EACH;EAEAI,UAAUA,CAAA;IACR,MAAME,GAAG,GAAG,4CAA4C;IACxD,MAAMC,IAAI,GAAG,QAAQ;IAErB,OAAO,IAAIC,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAI;MACrC,IAAI,OAAOC,QAAQ,KAAK,WAAW,EAAE;QACnCD,MAAM,CAAC,wCAAwC,CAAC;;MAGlD,MAAME,SAAS,GAAGD,QAAQ,CAACE,aAAa,CAAC,gBAAgBP,GAAG,IAAI,CAAC;MAEjE,IAAIM,SAAS,EAAE;QACbH,OAAO,CAAC,IAAI,CAAC;;MAGf,MAAMK,MAAM,GAAGH,QAAQ,CAACI,aAAa,CAAC,QAAQ,CAAC;MAE/CD,MAAM,CAACR,GAAG,GAAGA,GAAG;MAChBQ,MAAM,CAACP,IAAI,GAAGA,IAAI;MAClBO,MAAM,CAACE,KAAK,GAAG,IAAI;MAEnBF,MAAM,CAACG,MAAM,GAAG,MAAK;QACnBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;QACjCV,OAAO,CAAC,IAAI,CAAC;MACf,CAAC;MAEDK,MAAM,CAACM,OAAO,GAAG,MAAK;QACpBV,MAAM,CAAC,qDAAqDJ,GAAG,EAAE,CAAC;MACpE,CAAC;MAEDK,QAAQ,CAACU,IAAI,CAACC,WAAW,CAACR,MAAM,CAAC;IACnC,CAAC,CAAC;EACJ;EAEAT,aAAaA,CAAA;IACX,MAAMkB,GAAG,GAAG,YAAY;IAExB,OAAO,IAAIf,OAAO,CAAEC,OAAO,IAAI;MAC7Be,cAAc,CAACC,WAAW,CAACF,GAAG,CAAC,CAACG,IAAI,CAAC,MAAK;QACxC,MAAMC,YAAY,GAAGhB,QAAQ,CAACiB,aAAa,CAACL,GAAG,CAAC;QAEhDL,OAAO,CAACC,GAAG,CAACQ,YAAY,CAAC;QAEzB,IAAI,CAACE,SAAS,CAACC,aAAa,CAACR,WAAW,CAACK,YAAY,CAAC;QAEtDlB,OAAO,CAACkB,YAAY,CAAC;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CACD;AAhECI,UAAA,EADClC,SAAS,CAAC,WAAW,EAAE;EAAEmC,IAAI,EAAEpC;AAAU,CAAE,CAAC,+CACtB;AAFZE,YAAY,GAAAiC,UAAA,EALxBpC,SAAS,CAAC;EACTsC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,sBAAsB;EACnCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,GACWrC,YAAY,CAkExB;SAlEYA,YAAY","names":["Component","ElementRef","ViewChild","AppComponent","constructor","loading","ngAfterViewInit","_this","_asyncToGenerator","loadScript","loadMfeButton","src","type","Promise","resolve","reject","document","hasScript","querySelector","script","createElement","async","onload","console","log","onerror","body","appendChild","tag","customElements","whenDefined","then","webComponent","createComment","container","nativeElement","__decorate","read","selector","templateUrl","styleUrls"],"ignoreList":[],"sourceRoot":"","sources":["/Users/raphaelcapeto/Documents/arquitura-web-components/project-1/src/app/app.component.ts"],"sourcesContent":["import { AfterViewInit, Component, ElementRef, ViewChild } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('container', { read: ElementRef })\n  container!: ElementRef;\n\n  loading = false;\n\n  async ngAfterViewInit() {\n    try {\n      this.loading = true;\n\n      await this.loadScript();\n      await this.loadMfeButton();\n    } finally {\n      this.loading = false;\n    }\n  }\n\n  loadScript() {\n    const src = 'http://localhost:5002/assets/mfe-button.js';\n    const type = 'module';\n\n    return new Promise((resolve, reject) => {\n      if (typeof document === 'undefined') {\n        reject('loadScript: document não está definido');\n      }\n\n      const hasScript = document.querySelector(`script[src^=\"${src}\"]`);\n\n      if (hasScript) {\n        resolve(true);\n      }\n\n      const script = document.createElement('script');\n\n      script.src = src;\n      script.type = type;\n      script.async = true;\n\n      script.onload = () => {\n        console.log('@@@ carregou o mfe');\n        resolve(true);\n      };\n\n      script.onerror = () => {\n        reject(`loadScript: ocorreu um erro ao carregar o script: ${src}`);\n      };\n\n      document.body.appendChild(script);\n    });\n  }\n\n  loadMfeButton() {\n    const tag = 'mfe-button';\n\n    return new Promise((resolve) => {\n      customElements.whenDefined(tag).then(() => {\n        const webComponent = document.createComment(tag);\n\n        console.log(webComponent);\n\n        this.container.nativeElement.appendChild(webComponent);\n\n        resolve(webComponent);\n      });\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}